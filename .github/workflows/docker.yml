name: Docker Build and Test

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, develop ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/cert-agent

jobs:
  build-and-test:
    name: Build and Test Docker Image
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.5

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/kubeatlas/cert-agent
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Temporarily disable caching due to GitHub Actions Cache service issues
          # cache-from: type=gha,scope=${{ matrix.platform }}
          # cache-to: type=gha,mode=max,scope=${{ matrix.platform }}

  test-docker-compose:
    name: Test Docker Compose
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build local image
        run: |
          docker build -t cert-agent:test .

      - name: Test Docker Compose
        run: |
          # Start services
          docker compose up -d
          
          # Wait for services to be ready
          sleep 10
          
          # Check if services are running
          docker compose ps
          
          # Test Redis connection
          docker exec cert-agent-redis redis-cli ping
          echo "✅ Redis is responding"
          
          # Test gRPC service availability
          timeout 10 bash -c 'until nc -z localhost 50051; do sleep 1; done'
          echo "✅ gRPC service is running and accepting connections"
          
          # Cleanup
          cd ..
          docker compose down

      - name: Cleanup
        if: always()
        run: |
          docker compose down -v
          docker system prune -f
